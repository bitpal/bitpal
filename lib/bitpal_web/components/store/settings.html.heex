<%= BitPalWeb.StoreHTML.bar(assigns) %>
<% now = NaiveDateTime.utc_now() %>

<div class="store-settings-wrapper">
  <nav class="side-settings">
    <div>
      <ul>
        <li><a href="#">General</a></li>
      </ul>
    </div>

    <div>
      <div class="title">
        Payments
      </div>
      <ul>
        <li><a href="#">Exchange Rates</a></li>
        <li><a href="#">Invoices</a></li>
      </ul>
    </div>

    <div>
      <div class="title">
        Backends
      </div>
      <ul>
        <%= for {currency_id, _settings} <- @currency_settings do %>
          <li><a href="#"><%= Money.Currency.name!(currency_id) %>(<%= currency_id %>)</a></li>
        <% end %>
      </ul>
    </div>

    <div>
      <div class="title">
        Security
      </div>
      <ul>
        <li><a href="#">Access Tokens</a></li>
      </ul>
    </div>
  </nav>

  <div class="settings-wrapper">
    <section class="general-settings">
      <h1>General</h1>

      <.form :let={f} for={@edit_store} phx-submit="edit_store" id="edit_store">
        <%= error_tag(f, :label) %>
        <%= text_input(f, :label, placeholder: "Store label", required: true) %>

        <%= submit("Edit label") %>
      </.form>
    </section>

    <section class="access-tokens-settings">
      <h1>Access Tokens</h1>

      <%= if token = assigns[:created_token] do %>
        <section class="created-token">
          <div class="label"><%= token.label %></div>
          <div class="data"><%= token.data %></div>
        </section>
      <% end %>

      <.form :let={f} for={@create_token} phx-submit="create_token" id="create_token">
        <h2>Create token</h2>

        <div class="label">
          <%= error_tag(f, :label) %>
          <%= label(f, :label, "Token name") %>
          <%= text_input(f, :label, required: true) %>
        </div>

        <div class="date">
          <%= label(f, :valid_until, "Expiration date") %>
          <%= date_input(f, :valid_until) %>
        </div>

        <%= submit("Create store access token") %>
      </.form>

      <table class="access-tokens">
        <thead>
          <tr>
            <th>Token Name</th>
            <th>Created</th>
            <th>Last Used</th>
            <th>Expires</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <%= for token <- @store.access_tokens do %>
            <tr>
              <td><%= token.label %></td>
              <td><%= format_created_at(token) %></td>
              <td><%= format_last_accessed(token) %></td>
              <td><%= format_valid_until(token, now) %></td>
              <td>
                <% modal = ~s{.revoke-token-modal[token-id="#{token.id}"]} %>
                <button class="revoke-token" phx-click={JS.show(to: modal, display: "inline")}>
                  Revoke
                </button>
                <span class="revoke-token-modal" token-id={token.id}>
                  <button
                    class="confirm"
                    phx-click={JS.push("revoke_token") |> JS.hide(to: modal)}
                    phx-value-id={token.id}
                  >
                    Confirm
                  </button>
                  <button class="cancel" phx-click={JS.hide(to: modal)}>Cancel</button>
                </span>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </section>

    <%= for {currency_id, settings} <- @currency_settings do %>
      <section class="currency-settings">
        <h1><%= Money.Currency.name!(currency_id) %>(<%= currency_id %>)</h1>

        <.form
          :let={f}
          for={settings.address_key_changeset}
          phx-submit="address_key"
          as={currency_id}
          class="address_key"
        >
          <%= case settings.address_key_changeset.action do %>
            <% :success -> %>
              <div class="alert success">
                <p>Key updated</p>
              </div>
            <% :fail -> %>
              <div class="alert alert-danger">
                <p>Failed to update key</p>
              </div>
            <% _ -> %>
              <%= nil %>
          <% end %>

          <%= error_tag(f, :data) %>
          <%= label(f, :data, "xpub") %>
          <%= text_input(f, :data) %>

          <%= submit("Update xpub") %>
        </.form>

        <.form
          :let={f}
          for={settings.settings_changeset}
          phx-change="settings"
          as={currency_id}
          class="settings"
        >
          <%= error_tag(f, :required_confirmations) %>
          <%= label(f, :required_confirmations, "Required confirmations") %>
          <%= text_input(f, :required_confirmations, type: "number", min: 0) %>
        </.form>
      </section>
    <% end %>
  </div>
</div>
